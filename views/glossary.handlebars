<div>
    <P>
        <ol class = "OL">
            <li>
                Application Programming Interface or APIs - is a set of rules, routines, and protocols to build software applications. APIs help in communication with third party programs or services, which can be used to build different software. Companies such as Facebook and Twitter actively use APIs to help developers gain easier access to their services.
            </li></br></br>
             <li>
                Utility - is a small program that provides an addition to the capabilities provided by the operating system. In some usages, a utility is a special and nonessential part of the operating system. The print "utility" that comes with the operating system is an example.
            </li></br></br>
            <li>
                Program - is a specific set of ordered operations for a computer to perform. In the modern computer that John von Neumann outlined in 1945, the program contains a one-at-a-time sequence of instructions that the computer follows. Typically, the program is put into a storage area accessible to the computer.
            </li></br></br>
            <li>
                Server - is a computer program or device that provides a service to another computer program and its user, also known as the client. In a data center, the physical computer that a server program runs on is also frequently referred to as a server.
            </li></br></br>
            <li>
                Runtime - is the time period during which a program is, in fact, running on a computer. If an operation occurs at ‘runtime’, it occurred when a program is running or the moment at which the program begins to run. Also known as execution time, the runtime is part of the life cycle of the program, and it denotes the time between when the program begins running and until it is closed by the OS or the user.
            </li></br></br>
            <li>
                Scripting Language - is a programming language that employs a high-level construct to interpret and execute one command at a time. In general, scripting languages are easier to learn and faster to code in than more structured and compiled languages such as C and C++.
            </li></br></br>
            <li>
                Programming Language - are the languages with which a programmer implements a piece of software to run on a computer. The earliest programming languages were assembly languages, not far removed from the binary-encoded instructions directly executed by the computer.
            </li></br></br>
            <li>
                Platform - A computer or hardware device and/or associated operating system, or a virtual environment, on which software can be installed or run. Examples of platforms include Linux, Microsoft Windows Vista, and Java.
            </li></br></br>
            <li>
                Framework - Framework in programming is a foundation with a specified level of complexity that may be altered by the programmer, making use of their code. A framework might include different software libraries, APIs, compilers and much more. In simpler terms, a framework provides a favorable environment for a certain type and level of programming for a project. A framework allows the developers to bypass the general necessities and focus on more project-related specifics.
            </li></br></br>
            <li>
                Argument - Argument or arg is a value that is passed into a command or a function. For example, if SQR is a routine or function that returns the square of a number, then SQR(4) will return 16. Here, the value 4 is the argument. Similarly, if the edit is a function that edits a file, then in edit myfile.txt, myfile.txt is the argument.
            </li></br></br>
            <li>
                Bug - A bug is a general term used to denote an unexpected error or defect in hardware or software, which causes it to malfunction. Even though bugs are often considered to be insignificant computer glitches, there have been instances where bugs have caused life-threatening conditions and led to major financial losses. This makes it imperative to invest in the process of finding bugs before programs are rolled out for their application. This process is known as testing.
            </li></br></br>
            <li>
                Objects - An object is a combination of related variables, constants and other data structures which can be selected and manipulated together. An object can include shapes that appear on a screen or the age of students in a school.
            </li></br></br>
            <li>
                Object-Oriented Programming or OOP - is a model defined by programmers that revolve around objects and data rather than actions and logic. In OOP, not only the data type of a data structure is defined, but also the types of functions that can be applied to it. Through this, the data structure becomes an object that consists of both data and functions. Languages that use OOP concepts are Java, Python, C++, and Ruby.
            </li></br></br>
            <li>
                Class - In Object-Oriented programming, a class refers to a set of related objects with common properties. Classes and the ability to create new classes render OOP a powerful and flexible programming model. For example, there might be a class called shapes which contains objects which are triangles, pentagons, square and circle.  
            </li></br></br>
            <li>
                Model View Controller or MVC - is a software architectural pattern commonly used for developing user interfaces that divide the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user. 
            </li></br></br>
            <li>
                Code - Code or source code is a term used to describe a written set of instructions, written using the protocols of a particular language, such as Java, C or Python. The code can also be used informally to describe text written in a specific language. There are instances where references to the code are made for different languages, such as PHP Code, HTML Code,  Java Code or CSS Code.
            </li></br></br>
            <li>
                Syntax - the rules that define the structure of a language. Syntax in computer programming means the rules that control the structure of the symbols, punctuation, and words of a programming language. Without syntax, the meaning or semantics of a language is nearly impossible to understand.
            </li></br></br>
            <li>
                Conditionals - Conditionals, conditional statements, and conditional expressions are features of programming language, which help the code make a choice and result in either TRUE or FALSE. These perform different actions depending on the need of the programmer, and multiple conditions can be combined into a single condition, as long as the final value of the condition is either TRUE or FALSE.  Examples of conditional statements are IF, IF-Else, While and Else-If.
            </li></br></br>
            <li>
                String - is used for data values that are made up of ordered sequences of characters, such as "hello world". A string can contain any sequence of characters, visible or invisible, and characters may be repeated.
            </li></br></br>
            <li>
                Array - is a data structure that holds similar, related data. An array is like a collection of boxes, each of which is called an element . Each element has a position in the array, and can hold a value. The data in an array must all be of the same data type.
            </li></br></br>
            <li>
                Boolean - A Boolean expression or Boolean logic is an expression used for creating statements that are either TRUE or FALSE. Boolean expressions use AND, OR, XOR, NOT and NOR operators with conditional statements in programming, search engines, algorithms, and formulas. Boolean expressions are also called comparison expressions, conditional expressions, and relational expressions.
            </li></br></br>
            <li>
                If Statements - is a decision-making statement that guides a program to make decisions based on specified criteria. The IF statement executes one set of code if a specified condition is met TRUE or another set of code evaluates to FALSE.
            </li></br></br>
            <li>
                Declaration - A statement that describes a variable, function or any other identifier is called a declaration. A declaration helps the compiler or interpreter identify the word and understand its meaning, and how the process should be continued. Even though they are important, they are optional and may be used depending on the nature of the programming language.
            </li></br></br>
            <li>
                Loop - A loop is a sequence of instructions that repeat the same process over and over until a condition is met and it receives the order to stop. In a loop, the program asks a question, and if the answer directs the program to perform an action, the action is performed, and the loop runs again, performing the same task. It runs until the answer is such that no action is required and the code can proceed further. Loops are considered one of the most basic and powerful concepts in programming.
            </li></br></br>
            <li>
                Iteration - Iteration is a single pass through a set of operations that deal with code. One form of iteration in computer programming is via loops. A loop will repeat a certain segment of code until a condition is met and it can proceed further. Each time the computer runs a loop, it is known as an iteration. In simple terms, iteration is the process to repeat a particular snippet of code over and over again to perform a certain action.
            </li></br></br>
            <li>
                Null - Null defines the lack of any value whatsoever. A null character is a programming code, which represents a character with no value, missing value or the end of a character string. If we state $val1= ”” and $val2= “1”, $val1 has a null value.
            </li></br></br>
             <li>
                Back-End - Backend is another term used for background in programming. A backend task is the one that is performed in the background with the users direct interaction. Similarly, a backend developer is a person who designs programs that process data and perform tasks that users don't directly see.
            </li></br></br>
             <li>
                Front-End - The Front-end is the user interface of a computer or any device. For example, any operating system provides users with the ease of navigation. A program or OS is considered good if the UI or Front-end is easy to use and seamless to navigate. Front-end developers are the programmers who design and develop the user interface of a device.
            </li></br></br>
             <li>
                Server-Side - When procedures and processes are performed on the server, they are deemed server-side. On the other hand, the client-side is at the end of the user. Many programming languages are designed for server-side programmings such as PHP, Perl, and ASP. An excellent example of a server-side script is a search engine.
            </li></br></br>
             <li>
                Token - A token is the smallest individual unit in a program, often referring to a portion of a much larger data piece.
            </li></br></br>

        </ol>
    </P>
</div>